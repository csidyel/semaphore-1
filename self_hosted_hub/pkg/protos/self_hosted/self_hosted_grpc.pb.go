// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.3.0
// source: self_hosted.proto

package self_hosted

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SelfHostedAgents_Create_FullMethodName           = "/InternalApi.SelfHosted.SelfHostedAgents/Create"
	SelfHostedAgents_Update_FullMethodName           = "/InternalApi.SelfHosted.SelfHostedAgents/Update"
	SelfHostedAgents_Describe_FullMethodName         = "/InternalApi.SelfHosted.SelfHostedAgents/Describe"
	SelfHostedAgents_DescribeAgent_FullMethodName    = "/InternalApi.SelfHosted.SelfHostedAgents/DescribeAgent"
	SelfHostedAgents_List_FullMethodName             = "/InternalApi.SelfHosted.SelfHostedAgents/List"
	SelfHostedAgents_ListKeyset_FullMethodName       = "/InternalApi.SelfHosted.SelfHostedAgents/ListKeyset"
	SelfHostedAgents_ListAgents_FullMethodName       = "/InternalApi.SelfHosted.SelfHostedAgents/ListAgents"
	SelfHostedAgents_OccupyAgent_FullMethodName      = "/InternalApi.SelfHosted.SelfHostedAgents/OccupyAgent"
	SelfHostedAgents_ReleaseAgent_FullMethodName     = "/InternalApi.SelfHosted.SelfHostedAgents/ReleaseAgent"
	SelfHostedAgents_DisableAgent_FullMethodName     = "/InternalApi.SelfHosted.SelfHostedAgents/DisableAgent"
	SelfHostedAgents_DisableAllAgents_FullMethodName = "/InternalApi.SelfHosted.SelfHostedAgents/DisableAllAgents"
	SelfHostedAgents_DeleteAgentType_FullMethodName  = "/InternalApi.SelfHosted.SelfHostedAgents/DeleteAgentType"
	SelfHostedAgents_StopJob_FullMethodName          = "/InternalApi.SelfHosted.SelfHostedAgents/StopJob"
	SelfHostedAgents_ResetToken_FullMethodName       = "/InternalApi.SelfHosted.SelfHostedAgents/ResetToken"
)

// SelfHostedAgentsClient is the client API for SelfHostedAgents service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SelfHostedAgentsClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error)
	DescribeAgent(ctx context.Context, in *DescribeAgentRequest, opts ...grpc.CallOption) (*DescribeAgentResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	ListKeyset(ctx context.Context, in *ListKeysetRequest, opts ...grpc.CallOption) (*ListKeysetResponse, error)
	ListAgents(ctx context.Context, in *ListAgentsRequest, opts ...grpc.CallOption) (*ListAgentsResponse, error)
	OccupyAgent(ctx context.Context, in *OccupyAgentRequest, opts ...grpc.CallOption) (*OccupyAgentResponse, error)
	ReleaseAgent(ctx context.Context, in *ReleaseAgentRequest, opts ...grpc.CallOption) (*ReleaseAgentResponse, error)
	DisableAgent(ctx context.Context, in *DisableAgentRequest, opts ...grpc.CallOption) (*DisableAgentResponse, error)
	DisableAllAgents(ctx context.Context, in *DisableAllAgentsRequest, opts ...grpc.CallOption) (*DisableAllAgentsResponse, error)
	DeleteAgentType(ctx context.Context, in *DeleteAgentTypeRequest, opts ...grpc.CallOption) (*DeleteAgentTypeResponse, error)
	StopJob(ctx context.Context, in *StopJobRequest, opts ...grpc.CallOption) (*StopJobResponse, error)
	ResetToken(ctx context.Context, in *ResetTokenRequest, opts ...grpc.CallOption) (*ResetTokenResponse, error)
}

type selfHostedAgentsClient struct {
	cc grpc.ClientConnInterface
}

func NewSelfHostedAgentsClient(cc grpc.ClientConnInterface) SelfHostedAgentsClient {
	return &selfHostedAgentsClient{cc}
}

func (c *selfHostedAgentsClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_Create_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_Update_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DescribeResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_Describe_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) DescribeAgent(ctx context.Context, in *DescribeAgentRequest, opts ...grpc.CallOption) (*DescribeAgentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DescribeAgentResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_DescribeAgent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_List_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) ListKeyset(ctx context.Context, in *ListKeysetRequest, opts ...grpc.CallOption) (*ListKeysetResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListKeysetResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_ListKeyset_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) ListAgents(ctx context.Context, in *ListAgentsRequest, opts ...grpc.CallOption) (*ListAgentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListAgentsResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_ListAgents_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) OccupyAgent(ctx context.Context, in *OccupyAgentRequest, opts ...grpc.CallOption) (*OccupyAgentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OccupyAgentResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_OccupyAgent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) ReleaseAgent(ctx context.Context, in *ReleaseAgentRequest, opts ...grpc.CallOption) (*ReleaseAgentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ReleaseAgentResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_ReleaseAgent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) DisableAgent(ctx context.Context, in *DisableAgentRequest, opts ...grpc.CallOption) (*DisableAgentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DisableAgentResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_DisableAgent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) DisableAllAgents(ctx context.Context, in *DisableAllAgentsRequest, opts ...grpc.CallOption) (*DisableAllAgentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DisableAllAgentsResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_DisableAllAgents_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) DeleteAgentType(ctx context.Context, in *DeleteAgentTypeRequest, opts ...grpc.CallOption) (*DeleteAgentTypeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteAgentTypeResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_DeleteAgentType_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) StopJob(ctx context.Context, in *StopJobRequest, opts ...grpc.CallOption) (*StopJobResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StopJobResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_StopJob_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selfHostedAgentsClient) ResetToken(ctx context.Context, in *ResetTokenRequest, opts ...grpc.CallOption) (*ResetTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResetTokenResponse)
	err := c.cc.Invoke(ctx, SelfHostedAgents_ResetToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SelfHostedAgentsServer is the server API for SelfHostedAgents service.
// All implementations should embed UnimplementedSelfHostedAgentsServer
// for forward compatibility.
type SelfHostedAgentsServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Describe(context.Context, *DescribeRequest) (*DescribeResponse, error)
	DescribeAgent(context.Context, *DescribeAgentRequest) (*DescribeAgentResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	ListKeyset(context.Context, *ListKeysetRequest) (*ListKeysetResponse, error)
	ListAgents(context.Context, *ListAgentsRequest) (*ListAgentsResponse, error)
	OccupyAgent(context.Context, *OccupyAgentRequest) (*OccupyAgentResponse, error)
	ReleaseAgent(context.Context, *ReleaseAgentRequest) (*ReleaseAgentResponse, error)
	DisableAgent(context.Context, *DisableAgentRequest) (*DisableAgentResponse, error)
	DisableAllAgents(context.Context, *DisableAllAgentsRequest) (*DisableAllAgentsResponse, error)
	DeleteAgentType(context.Context, *DeleteAgentTypeRequest) (*DeleteAgentTypeResponse, error)
	StopJob(context.Context, *StopJobRequest) (*StopJobResponse, error)
	ResetToken(context.Context, *ResetTokenRequest) (*ResetTokenResponse, error)
}

// UnimplementedSelfHostedAgentsServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSelfHostedAgentsServer struct{}

func (UnimplementedSelfHostedAgentsServer) Create(context.Context, *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedSelfHostedAgentsServer) Update(context.Context, *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedSelfHostedAgentsServer) Describe(context.Context, *DescribeRequest) (*DescribeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Describe not implemented")
}
func (UnimplementedSelfHostedAgentsServer) DescribeAgent(context.Context, *DescribeAgentRequest) (*DescribeAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeAgent not implemented")
}
func (UnimplementedSelfHostedAgentsServer) List(context.Context, *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedSelfHostedAgentsServer) ListKeyset(context.Context, *ListKeysetRequest) (*ListKeysetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListKeyset not implemented")
}
func (UnimplementedSelfHostedAgentsServer) ListAgents(context.Context, *ListAgentsRequest) (*ListAgentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAgents not implemented")
}
func (UnimplementedSelfHostedAgentsServer) OccupyAgent(context.Context, *OccupyAgentRequest) (*OccupyAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OccupyAgent not implemented")
}
func (UnimplementedSelfHostedAgentsServer) ReleaseAgent(context.Context, *ReleaseAgentRequest) (*ReleaseAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseAgent not implemented")
}
func (UnimplementedSelfHostedAgentsServer) DisableAgent(context.Context, *DisableAgentRequest) (*DisableAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableAgent not implemented")
}
func (UnimplementedSelfHostedAgentsServer) DisableAllAgents(context.Context, *DisableAllAgentsRequest) (*DisableAllAgentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableAllAgents not implemented")
}
func (UnimplementedSelfHostedAgentsServer) DeleteAgentType(context.Context, *DeleteAgentTypeRequest) (*DeleteAgentTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAgentType not implemented")
}
func (UnimplementedSelfHostedAgentsServer) StopJob(context.Context, *StopJobRequest) (*StopJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopJob not implemented")
}
func (UnimplementedSelfHostedAgentsServer) ResetToken(context.Context, *ResetTokenRequest) (*ResetTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetToken not implemented")
}
func (UnimplementedSelfHostedAgentsServer) testEmbeddedByValue() {}

// UnsafeSelfHostedAgentsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SelfHostedAgentsServer will
// result in compilation errors.
type UnsafeSelfHostedAgentsServer interface {
	mustEmbedUnimplementedSelfHostedAgentsServer()
}

func RegisterSelfHostedAgentsServer(s grpc.ServiceRegistrar, srv SelfHostedAgentsServer) {
	// If the following call pancis, it indicates UnimplementedSelfHostedAgentsServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SelfHostedAgents_ServiceDesc, srv)
}

func _SelfHostedAgents_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_Describe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).Describe(ctx, req.(*DescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_DescribeAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).DescribeAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_DescribeAgent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).DescribeAgent(ctx, req.(*DescribeAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_ListKeyset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListKeysetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).ListKeyset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_ListKeyset_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).ListKeyset(ctx, req.(*ListKeysetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_ListAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAgentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).ListAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_ListAgents_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).ListAgents(ctx, req.(*ListAgentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_OccupyAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OccupyAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).OccupyAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_OccupyAgent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).OccupyAgent(ctx, req.(*OccupyAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_ReleaseAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).ReleaseAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_ReleaseAgent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).ReleaseAgent(ctx, req.(*ReleaseAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_DisableAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).DisableAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_DisableAgent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).DisableAgent(ctx, req.(*DisableAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_DisableAllAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableAllAgentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).DisableAllAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_DisableAllAgents_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).DisableAllAgents(ctx, req.(*DisableAllAgentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_DeleteAgentType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAgentTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).DeleteAgentType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_DeleteAgentType_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).DeleteAgentType(ctx, req.(*DeleteAgentTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_StopJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).StopJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_StopJob_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).StopJob(ctx, req.(*StopJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SelfHostedAgents_ResetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelfHostedAgentsServer).ResetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SelfHostedAgents_ResetToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelfHostedAgentsServer).ResetToken(ctx, req.(*ResetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SelfHostedAgents_ServiceDesc is the grpc.ServiceDesc for SelfHostedAgents service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SelfHostedAgents_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "InternalApi.SelfHosted.SelfHostedAgents",
	HandlerType: (*SelfHostedAgentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SelfHostedAgents_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _SelfHostedAgents_Update_Handler,
		},
		{
			MethodName: "Describe",
			Handler:    _SelfHostedAgents_Describe_Handler,
		},
		{
			MethodName: "DescribeAgent",
			Handler:    _SelfHostedAgents_DescribeAgent_Handler,
		},
		{
			MethodName: "List",
			Handler:    _SelfHostedAgents_List_Handler,
		},
		{
			MethodName: "ListKeyset",
			Handler:    _SelfHostedAgents_ListKeyset_Handler,
		},
		{
			MethodName: "ListAgents",
			Handler:    _SelfHostedAgents_ListAgents_Handler,
		},
		{
			MethodName: "OccupyAgent",
			Handler:    _SelfHostedAgents_OccupyAgent_Handler,
		},
		{
			MethodName: "ReleaseAgent",
			Handler:    _SelfHostedAgents_ReleaseAgent_Handler,
		},
		{
			MethodName: "DisableAgent",
			Handler:    _SelfHostedAgents_DisableAgent_Handler,
		},
		{
			MethodName: "DisableAllAgents",
			Handler:    _SelfHostedAgents_DisableAllAgents_Handler,
		},
		{
			MethodName: "DeleteAgentType",
			Handler:    _SelfHostedAgents_DeleteAgentType_Handler,
		},
		{
			MethodName: "StopJob",
			Handler:    _SelfHostedAgents_StopJob_Handler,
		},
		{
			MethodName: "ResetToken",
			Handler:    _SelfHostedAgents_ResetToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "self_hosted.proto",
}
