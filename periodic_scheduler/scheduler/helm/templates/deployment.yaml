apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
      matchLabels:
        app: {{ .Chart.Name }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      name: {{ .Chart.Name }}
      labels:
        app: {{ .Chart.Name }}
    spec:
      automountServiceAccountToken: false
      volumes:
        - name: features-volume
          configMap:
            defaultMode: 0644
            name: features
            items:
            - key: features.yml
              path: features.yml
      initContainers:
{{ include "initContainers.all" . | indent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.image.registry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
          command: ["/bin/sh", "-c"]
          args: ["bin/scheduler eval \"ReleaseTasks.migrate()\" && bin/scheduler start"]
          ports:
          - name: grpc
            containerPort: 50050
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: features-volume
              mountPath: {{ .Values.featureFlags.mountPath | quote }}
              readOnly: true
              subPath: features.yml
          envFrom:
          - configMapRef:
              name: {{ .Values.global.internalApi.configMapName }}
          env:
          - name: POSTGRES_DB_SSL
            value: {{ .Values.global.database.ssl | quote }}
          - name: DB_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.database.secretName }}
                key: host
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.database.secretName }}
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.database.secretName }}
                key: password
          - name: RABBITMQ_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.rabbitmq.secretName }}
                key: amqp-url
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: FEATURE_YAML_PATH
            value: {{ .Values.featureFlags.mountPath | quote }}
{{- if .Values.global.statsd.enabled }}
          - name: METRICS_NAMESPACE
            value: {{ .Values.global.statsd.metricsNamespace }}
{{- end }}

          startupProbe:
            grpc:
              port: 50050
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
          livenessProbe:
            grpc:
              port: 50050
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
{{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}

{{- if .Values.global.statsd.enabled }}
        - name: {{ .Chart.Name }}-statsd
          image: "{{ .Values.global.image.registry }}/{{ .Values.global.statsd.image }}:{{ .Values.global.statsd.imageTag }}"
          env:
            - name: FLUSH_INTERVAL
              value: "60000"
            - name: GRAPHITE_HOST
              value: {{ .Values.global.statsd.graphiteHost }}
{{- if .Values.statsd.resources }}
          resources:
{{ toYaml .Values.statsd.resources | indent 13 }}
{{- end }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
{{- end }}
