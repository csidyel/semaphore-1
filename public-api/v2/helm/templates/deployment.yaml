apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      name: {{ .Chart.Name }}
      namespace: {{ .Release.Namespace }}
      labels:
        app: "{{ .Chart.Name }}"
        product: semaphoreci
    spec:
      automountServiceAccountToken: false
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.image.registry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
          ports:
            - containerPort: 4004
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          env:
            - name: LOG_LEVEL
              value: {{ .Values.logging.level }}
            - name: API_VERSION
              value: "v2"
            - name: USE_RBAC_API
              value: "true"
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PPL_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_PLUMBER
            - name: WF_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_PLUMBER
            - name: INTERNAL_API_URL_RBAC
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_RBAC
            - name: GOFER_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_GOFER
            - name: SECRETHUB_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_SECRETHUB
            - name: DASHBOARDHUB_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_DASHBOARDHUB
            - name: NOTIFICATIONS_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_NOTIFICATION
            - name: PROJECTHUB_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_PROJECT
            - name: FEATURE_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_FEATURE
            - name: PERIODIC_SCHEDULER_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_SCHEDULER
            - name: USER_API_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.internalApi.configMapName }}
                  key: INTERNAL_API_URL_USER
{{- if .Values.global.statsd.enabled }}
            - name: METRICS_NAMESPACE
              value: {{ .Values.global.statsd.metricsNamespace }}
{{- end }}
{{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}
          livenessProbe:
            httpGet:
              path: /health_check/ping
              port: 4004
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
{{- if .Values.global.statsd.enabled }}
        - name: {{ .Chart.Name }}-statsd
          image: "{{ .Values.global.image.registry }}/{{ .Values.global.statsd.image }}:{{ .Values.global.statsd.imageTag }}"
          env:
            - name: FLUSH_INTERVAL
              value: "60000"
            - name: GRAPHITE_HOST
              value: {{ .Values.global.statsd.graphiteHost }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
{{- if .Values.statsd.resources }}
          resources:
{{ toYaml .Values.statsd.resources | indent 13 }}
{{- end }}
{{- end }}
