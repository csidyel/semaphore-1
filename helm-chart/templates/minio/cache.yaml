{{- if .Values.global.cache.local.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: minio-cache
  namespace: {{ .Release.Namespace }}
  labels:
    app: minio-cache
    product: semaphoreci
{{- if eq .Values.ingress.className "gce" }}
  annotations:
    cloud.google.com/backend-config: '{"ports": {"9000":"minio-cache-backend-config"}}'
    cloud.google.com/neg: '{"ingress": true}'
{{- end }}
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: minio-cache
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-cache
  labels:
    app: minio-cache
    product: semaphoreci
spec:
  serviceName: minio-cache
  replicas: 1
  selector:
    matchLabels:
      app: minio-cache
  template:
    metadata:
      labels:
        app: minio-cache
        product: semaphoreci
    spec:
      containers:
      - name: minio-cache
        image: minio/minio:{{ .Values.global.cache.local.version }}
        env:
          - name: MINIO_ROOT_USER
            value: {{ .Values.global.cache.username }}
          - name: MINIO_ROOT_PASSWORD
            value: {{ .Values.global.cache.password }}
        ports:
        - containerPort: 9000
        command: ["sh"]
        args: ["-c", "mkdir -p /minio-data/semaphore-cache && minio server /minio-data"]
        volumeMounts:
        - name: minio-cache-storage
          mountPath: "/minio-data"
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 15
  volumeClaimTemplates:
  - metadata:
      name: minio-cache-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.global.cache.local.size }}
---
{{- if .Values.ingress.enabled }}
{{- if eq .Values.ingress.className "gce" }}
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: minio-cache-backend-config
  namespace: {{ .Release.Namespace }}
spec:
  timeoutSec: 30
  connectionDraining:
    drainingTimeoutSec: 30
  logging:
    enable: true
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 10
    port: 9000
    type: HTTP
    requestPath: /minio/health/live
{{- end }}
{{- end }}
{{- end }}