# This is a Semaphore configuration file for Elixir projects
# For more information about Semaphore configuration visit:
# https://docs.semaphoreci.com/reference/pipeline-yaml-reference/

version: v1.0  # Semaphore configuration version
name: "💫 Elixir CI Pipeline"  # Pipeline display name

# Define the machine type and OS image to run the pipeline on
agent:
  machine:
    type: {{ machine_type }}
    os_image: {{ os_image }}

# Configure when to stop the pipeline early
fail_fast:
  stop:
    when: branch != 'main'  # Stop all blocks if a job fails on non-main branches
auto_cancel:
  running:
    when: branch != 'main'  # Cancel running pipelines on non-main branches
  queued:
    when: branch = 'main'   # Cancel queued pipelines on main branch

# Commands to run before each job
global_job_config:
  prologue:
    commands:
      - checkout                           # Get the code from repository
      - sem-service start postgres 17      # Start PostgreSQL service
      - sem-version erlang 26.2            # Set Erlang version
      - sem-version elixir 1.15.7          # Set Elixir version
      - cache restore                      # Restore cached dependencies      
      - mix local.hex --force              # Install Hex package manager
      - mix local.rebar --force            # Install rebar3 build tool
      - mix deps.get                       # Install dependencies

# Pipeline blocks represent groups of jobs that can run in parallel
blocks:
  # Block for setting up dependencies and caching
  - name: "🛠️ Setup and Cache"
    dependencies: []
    task:
      jobs:
        - name: Install Dependencies
          commands:
            - mix deps.compile  # Compile dependencies
            - mix compile      # Compile project
            - cache store      # Cache dependencies for future runs

  # Block for code quality checks
  - name: "🔍 Code Quality"
    dependencies:
      - "🛠️ Setup and Cache"
    task:
      jobs:
        - name: Run Formatter and Credo
          commands:
            - mix format --check-formatted  # Check code formatting
            - mix credo --strict           # Run static code analysis

  # Block for security checks
  - name: "🔐 Security Checks"
    dependencies:
      - "🛠️ Setup and Cache"
    task:
      jobs:
        - name: Run Security Scans
          commands:
            - mix deps.audit  # Check for known vulnerabilities
            - mix sobelow    # Run security-focused static analysis

  # Block for type checking
  - name: "📊 Dialyzer"
    dependencies:
      - "🛠️ Setup and Cache"
    task:
      jobs:
        - name: Type Checking
          commands:
            - mix dialyzer  # Run static type checking

  # Block for running tests
  - name: "🧪 Test Suite"
    dependencies:
      - "🛠️ Setup and Cache"
    task:
      env_vars:
        - name: MIX_ENV
          value: test
        - name: PGHOST
          value: 127.0.0.1
        - name: PGUSER
          value: postgres
      jobs:
        - name: "🟢 ExUnit Tests"
          parallelism: 4  # Run tests in parallel
          commands:
            - mix test.setup  # Setup test database
            - mix test --partitions $SEMAPHORE_JOB_COUNT --partition $SEMAPHORE_JOB_INDEX --cover  # Run tests with coverage
