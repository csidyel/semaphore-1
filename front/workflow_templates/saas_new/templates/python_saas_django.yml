version: v1.0
name: "🐍 Django CI Pipeline"

agent:
  machine:
    type: {{ machine_type }}
    os_image: {{ os_image }}

fail_fast:
  stop:
    when: branch != 'master'  # Stop execution early for non-master branches
auto_cancel:
  running:
    when: branch != 'master'  # Auto-cancel running pipelines on non-master branches
  queued:
    when: branch = 'master'  # Auto-cancel queued pipelines for master branch

global_job_config:
  prologue:
    commands:
      - sem-version python 3.8  # Use Python 3.8 for the pipeline
      - checkout  # Fetch the latest code from the repository
      - cache restore  # Restore cached dependencies
      - pip install -r requirements.txt --cache-dir .pip_cache  # Install project dependencies

blocks:
  - name: "🛠️ Install Dependencies"
    dependencies: []  # No dependencies; runs at the start
    task:
      jobs:
        - name: "📦 Install Python Dependencies"
          commands:
            - sudo apt-get update && sudo apt-get install -y python3-dev  # Install Python development tools
            - sudo apt-get install default-libmysqlclient-dev  # Install MySQL client development libraries
            - pip download --cache-dir .pip_cache -r requirements.txt  # Download Python dependencies
            - cache store  # Cache the downloaded dependencies

  - name: "🔍 Run Code Analysis"
    dependencies: []  # Independent block; runs in parallel with other tasks
    task:
      jobs:
        - name: "🛡️ Pylint Analysis"
          commands:
            - git ls-files | grep -v 'migrations' | grep -v 'settings.py' | grep -v 'manage.py' | grep -E '.py$' | xargs pylint -E --load-plugins=pylint_django  # Run Pylint with Django plugin

  - name: "🧪 Run Unit Tests"
    dependencies:
      - "🛠️ Install Dependencies"  # Ensure dependencies are installed
    task:
      jobs:
        - name: "🔎 Test Models"
          commands:
            - sem-service start mysql  # Start MySQL service
            - python manage.py test tasks.tests.test_models  # Run model-specific tests
        - name: "🔎 Test Views"
          commands:
            - sem-service start mysql  # Start MySQL service
            - python manage.py test tasks.tests.test_views  # Run view-specific tests

  - name: "🌐 Run Browser Tests"
    dependencies:
      - "🧪 Run Unit Tests"  # Ensure unit tests pass first
    task:
      env_vars:
        - name: DB_NAME
          value: pydjango  # Database name for testing
      jobs:
        - name: "🎭 Browser Tests"
          commands:
            - sem-service start mysql  # Start MySQL service
            - sudo apt-get update && sudo apt-get install -y -qq mysql-client  # Install MySQL client
            - mysql --host=0.0.0.0 -uroot -e "create database $DB_NAME"  # Create test database
            - 'nohup python manage.py runserver 127.0.0.1:8732 &'  # Start Django server for browser tests
            - python manage.py test tasks.tests.test_browser  # Run browser-specific tests

  - name: "🔐 Run Security Tests"
    dependencies: []  # Runs independently in parallel
    task:
      jobs:
        - name: "✅ Deployment Checklist"
          commands:
            - python manage.py check --deploy --fail-level ERROR  # Run Django deployment checklist
