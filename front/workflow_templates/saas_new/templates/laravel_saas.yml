# This is a Semaphore configuration file for Laravel projects using Docker
# For more information about Semaphore configuration visit:
# https://docs.semaphoreci.com/reference/pipeline-yaml-reference/

version: v1.0
name: "🚀 Laravel CI Pipeline"

agent:
  machine:
    type: {{ machine_type }}  # Define the machine type (e.g., e1-standard-2 for Laravel projects)
    os_image: {{ os_image }}  # Specify the OS image (e.g., ubuntu2004 for compatibility)

fail_fast:
  stop:
    when: branch != 'main'  # Stop execution early for non-main branches to save resources
auto_cancel:
  running:
    when: branch != 'main'  # Cancel running pipelines on non-main branches
  queued:
    when: branch = 'main'   # Cancel queued pipelines on the main branch

global_job_config:
  prologue:
    commands:
      - checkout  # Fetch the latest code from the repository
      - sem-service start mysql 8.0  # Start MySQL service for database operations
      - sem-service start redis 7  # Start Redis service for caching and queues
      - sem-version php 8.3  # Use PHP version 8.3
      - sem-version node 20.11.0  # Use Node.js version 20.11.0
      - cache restore  # Restore cached dependencies      
      - composer config -g github-oauth.github.com ${GITHUB_TOKEN}  # Set GitHub token for Composer
      - composer install --no-interaction --prefer-dist  # Install PHP dependencies
      - npm ci  # Install Node.js dependencies
      - cp .env.example .env  # Set up environment configuration
      - php artisan key:generate  # Generate the application encryption key

blocks:
  - name: "🛠️ Setup and Cache"
    dependencies: []
    task:
      jobs:
        - name: "Cache Dependencies"
          commands:
            - cache store  # Cache dependencies for future runs

  - name: "🎨 Compile Assets"
    dependencies: ["🛠️ Setup and Cache"]
    task:
      jobs:
        - name: "Build Frontend Assets"
          commands:
            - npm run build  # Build frontend assets

  - name: "🔍 Code Quality"
    dependencies: ["🛠️ Setup and Cache"]
    task:
      jobs:
        - name: "Lint and Format Code"
          commands:
            - ./vendor/bin/pint --test  # Check code style
            - ./vendor/bin/phpstan analyse  # Perform static code analysis
            - npm run lint  # Lint JavaScript code

  - name: "🔐 Security Checks"
    dependencies: ["🛠️ Setup and Cache"]
    task:
      jobs:
        - name: "Run Security Audits"
          commands:
            - composer audit  # Audit PHP dependencies for vulnerabilities
            - npm audit  # Audit Node.js dependencies for vulnerabilities

  - name: "🧪 Test Suite"
    dependencies: ["🛠️ Setup and Cache"]
    task:
      env_vars:
        - name: APP_ENV
          value: testing  # Set the environment to testing
        - name: DB_CONNECTION
          value: mysql  # Database connection
        - name: DB_HOST
          value: 127.0.0.1  # Database host
        - name: DB_PORT
          value: "3306"  # Database port
        - name: REDIS_HOST
          value: 127.0.0.1  # Redis host
      jobs:
        - name: "🟢 Run PHPUnit Tests"
          parallelism: 4  # Run tests in parallel for faster feedback
          commands:
            - php artisan migrate:fresh --seed  # Reset and seed the database
            - php artisan test --parallel --coverage-clover=report.xml  # Run tests with coverage and generate JUnit report
      epilogue:
        always:
          commands:
            - '[[ -f report.xml ]] && test-results publish report.xml'  # Publish test results if available
            
  - name: "🌐 Browser Tests"
    dependencies: ["🧪 Test Suite"]
    task:
      jobs:
        - name: "Run Dusk Tests"
          commands:
            - php artisan dusk:chrome-driver  # Install Chrome driver
            - php artisan serve --env=dusk.testing &  # Start the Laravel server for browser tests
            - php artisan dusk  # Run Laravel Dusk browser tests

after_pipeline:
  task:
    jobs:
      - name: "Merge Reports 📊"
        commands:
          - test-results gen-pipeline-report  # Generate a summary of the test results
