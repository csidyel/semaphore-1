# This is a Semaphore configuration file for React projects using Docker
# For more information about Semaphore configuration visit:
# https://docs.semaphoreci.com/reference/pipeline-yaml-reference/

version: v1.0
name: Semaphore React Native iOS Example Pipeline

agent:
  machine:
    type: {{ machine_type }}
    os_image: {{ os_image }}
  containers:
    - name: main
      image: 'registry.semaphoreci.com/android:34-node'  # Android image with Node.js

fail_fast:
  stop:
    when: branch != 'master'  # Stop execution early for non-master branches
auto_cancel:
  running:
    when: branch != 'master'  # Auto-cancel running pipelines on non-master branches
  queued:
    when: branch = 'master'  # Auto-cancel queued pipelines for master branch
    
global_job_config:
  prologue:
    commands:
      - checkout  # Fetch the latest code from the repository
      - cache restore  # Restore cached dependencies

blocks:
  - name: "📦 Install Dependencies"
    dependencies: []
    task:
      jobs:
        - name: "📂 npm install and cache"
          commands:
            - npm install  # Install Node.js dependencies
            - cache store  # Cache the installed dependencies

  - name: "🔍 Run Linter"
    dependencies:
      - "📦 Install Dependencies"
    task:
      jobs:
        - name: "🧹 Run ESLint"
          commands:
            - npm run lint  # Run ESLint for code linting

  - name: "🧪 iOS Unit and Integration Tests"
    dependencies:
      - "🔍 Run Linter"
    task:
      agent:
        machine:
          type: a2-standard-4  # Optimized machine for iOS tests
          os_image: macos-xcode16
      jobs:
        - name: "✅ iOS Unit and Integration Tests"
          parallelism: 2  # Run tests in parallel
          commands:
            - npm test  # Run unit and integration tests for iOS

  - name: "🧪 iOS E2E Tests"
    dependencies:
      - "🔍 Run Linter"
    task:
      agent:
        machine:
          type: a2-standard-4  # Machine for iOS E2E tests
          os_image: macos-xcode16
      jobs:
        - name: "🎭 iOS E2E Tests"
          parallelism: 2  # Run tests in parallel
          commands:
            - brew tap wix/brew  # Install AppleSimUtils
            - brew install applesimutils
            - nvm install 14  # Install Node.js 14
            - cd ios && pod install && cd ..  # Install iOS dependencies
            - npm run detox-clean-and-build-cache  # Clean and build cache
            - npm run detox-ios-build-release  # Build iOS app for E2E tests
            - npm run detox-ios-test-release  # Run iOS E2E tests
            - artifact push workflow ios/build/Build/Products/Release-iphonesimulator/ReactNativeSemaphoreNew.app

  - name: "🧪 Android Unit and Integration Tests"
    dependencies:
      - "🔍 Run Linter"
    task:
      prologue:
        commands:
          - sdkmanager "platform-tools" "platforms;android-24" "emulator"  # Install Android SDK components
          - sdkmanager "system-images;android-24;default;x86"  # Install system image
          - echo no | avdmanager create avd -n Nexus_S_API_24 -k "system-images;android-24;default;x86" --device "Nexus S"  # Create emulator
      jobs:
        - name: "✅ Android Unit and Integration Tests"
          parallelism: 2  # Run tests in parallel
          commands:
            - npm test  # Run unit and integration tests for Android

  - name: "🧪 Android E2E Tests"
    dependencies:
      - "🔍 Run Linter"
    task:
      prologue:
        commands:
          - sdkmanager "platform-tools" "platforms;android-24" "emulator"  # Install Android SDK components
          - sdkmanager "system-images;android-24;default;x86"  # Install system image
          - echo no | avdmanager create avd -n Nexus_S_API_24 -k "system-images;android-24;default;x86" --device "Nexus S"  # Create emulator
      jobs:
        - name: "🎭 Android E2E Tests"
          parallelism: 2  # Run tests in parallel
          commands:
            - npm run detox-clean-and-build-cache  # Clean and build cache
            - npm run detox-android-build-release  # Build Android app for E2E tests
            - npm run detox-android-test-release  # Run Android E2E tests
            - artifact push workflow android/app/build/outputs/apk/release/app-release.apk
