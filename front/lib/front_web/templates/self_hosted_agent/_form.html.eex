<div class="flex-auto" id="self_hosted_agent_settings">
  <% form_path = if @action == :new, do: self_hosted_agent_path(@conn, :create), else: self_hosted_agent_path(@conn, :update, "s1-#{@agent_type_model.name_suffix}") %>
  <% form_params = if @action == :edit, do: [method: :put, as: :self_hosted_agent], else: [as: :self_hosted_agent] %>
  <%= form_for :self_hosted_agent, form_path, form_params, fn f -> %>
    <input type="hidden" name=name id="self-hosted-agent-name">

    <%= if @action == :edit do %>
      <div class="flex items-center mb2">
        <div class="bg-white pl2 pr1 pv1 bl bt bb br3 br--left b--light-gray"> s1- </div>
        <%= text_input f, :name_suffix, id: "self-hosted-agent-name-suffix", name: "name-suffix", value: @agent_type_model.name_suffix, size: 40, placeholder: "e.g. linux-gpu", class: "form-control br--right", readonly: true, disabled: true %>
      </div>
    <% else %>
      <div class="flex items-center mb2">
        <div class="bg-white pl2 pr1 pv1 bl bt bb br3 br--left b--light-gray"> s1- </div>
        <%= text_input f, :name_suffix, id: "self-hosted-agent-name-suffix", name: "name-suffix", value: @agent_type_model.name_suffix, size: 40, placeholder: "e.g. linux-gpu", class: "form-control br--right" %>
      </div>
    <% end %>

    <%= if @action == :new do %>
      <p class="f6 mb3">No spaces, please. will be registered as: <strong id="self-hosted-agent-type-name">s1-linux-gpu</strong></p>
    <% end %>

    <p class="f5 b mb2 mt2">Agent name assignment origin</p>
    <div class="flex items-center">
      <%= radio_button f, :agent_name_assignment_origin, :ASSIGNMENT_ORIGIN_AGENT, checked: @agent_type_model.agent_name_assignment_origin == :ASSIGNMENT_ORIGIN_AGENT, data: [action: "nameAssignmentSwitch"] %>
      <%= label f, :agent_name_assignment_origin, class: "ml2", for: "self_hosted_agent_agent_name_assignment_origin_ASSIGNMENT_ORIGIN_AGENT" do %>
        Agent name is directly assigned by the agent.
      <% end %>
    </div>
    <div class="flex items-center">
      <%= radio_button f, :agent_name_assignment_origin, :ASSIGNMENT_ORIGIN_AWS_STS, checked: @agent_type_model.agent_name_assignment_origin == :ASSIGNMENT_ORIGIN_AWS_STS, data: [action: "nameAssignmentSwitch"] %>
      <%= label f, :agent_name_assignment_origin, class: "ml2", for: "self_hosted_agent_agent_name_assignment_origin_ASSIGNMENT_ORIGIN_AWS_STS" do %>
        Agent name is assigned from a pre-signed AWS STS GetCallerIdentity URL
      <% end %>
    </div>

    <div id="name-assignment-options__ASSIGNMENT_ORIGIN_AWS_STS" class="hide ml3 mv3 pv2 ph3 ba b--lighter-gray bg-white br2">
      <div class="mv3">
        <p class="f5 b mb1">What is the AWS account ID?</p>
        <div class="mt2">
          <%= text_input f, :aws_account, value: @agent_type_model.aws_account, class: "form-control w-25" %>
          <p class="f6 mt1 mb0">Only agent registrations using pre-signed URLs for this account will be allowed.</p>
        </div>
      </div>
      <div class="mv3">
        <p class="f5 b mb1">What are the AWS IAM role names allowed?</p>
        <div class="mt2">
          <%= text_input f, :aws_role_patterns, value: @agent_type_model.aws_role_patterns, placeholder: "my-role-1,another-role-*", class: "form-control w-50" %>
          <p class="f6 mt1 mb0">A comma-separated list of role names allowed. You can use wildcard characters (*).
        </div>
      </div>
    </div>

    <p class="f5 b mb2 mt2">Agent name release</p>
    <div class="flex items-center">
      <%= radio_button f, :agent_name_release, true, checked: @agent_type_model.agent_name_release, data: [action: "nameReleaseSwitch"] %>
      <%= label f, :agent_name_release, class: "ml2", for: "self_hosted_agent_agent_name_release_true" do %>
        Agent name is reusable immediately after it disconnects
      <% end %>
    </div>
    <div class="flex items-center">
      <%= radio_button f, :agent_name_release, false, checked: !@agent_type_model.agent_name_release, data: [action: "nameReleaseSwitch"] %>
      <%= label f, :agent_name_release, class: "ml2", for: "self_hosted_agent_agent_name_release_false" do %>
        Agent name is reusable only after some time from it disconnecting
      <% end %>
    </div>

    <div id="name-release-options" class="hide ml3 mv3 pv2 ph3 ba b--lighter-gray bg-white br2">
      <div class="mv3">
        <p class="f5 b mb1">How much time (in seconds)?</p>
        <div class="mt2">
          <%= text_input f, :agent_name_release_after, type: "number", value: @agent_type_model.agent_name_release_after, class: "form-control w-25" %>
        </div>
      </div>
    </div>

    <div class="f6 mt4 mb3">
      <div class="flex">
        <% cancel_button_path = if @action == :edit, do: self_hosted_agent_path(@conn, :show, "s1-#{@agent_type_model.name_suffix}"), else: self_hosted_agent_path(@conn, :index)  %>
        <%= submit agent_type_submit_button(@action), id: "register-self-hosted-agent", class: "btn btn-primary mr3", disabled: @action == :new %>
        <%= link "Cancel", to: cancel_button_path, class: "btn btn-secondary" %>
      </div>
    </div>
  <% end %>

  <%= if @action == :new do %>
    <p class="measure mb0">Next, you'll get the instructions on how to set up and run an agent on your own infrastructure. Semaphore currently supports Ubuntu, macOS and Windows.</p>
  <% end %>
</div>
