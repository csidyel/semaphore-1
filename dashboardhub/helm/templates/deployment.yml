apiVersion: v1
kind: Service
metadata:
  name: "dashboards-v1alpha-public-grpc-api"
spec:
  type: NodePort
  selector:
    app: "{{ .Chart.Name }}-v1alpha-public-grpc-api"
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-v1alpha-public-grpc-api"
  namespace: "{{ .Release.Namespace }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}-v1alpha-public-grpc-api"
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  template:
    metadata:
      name: "{{ .Chart.Name }}-v1alpha-public-grpc-api"
      labels:
        app: "{{ .Chart.Name }}-v1alpha-public-grpc-api"
        product: semaphoreci
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      automountServiceAccountToken: false
      initContainers:
{{ include "initContainers.all" . | indent 8 }}
      containers:
        - name: "{{ .Chart.Name }}-v1alpha-public-grpc-api"
          image: "{{ .Values.global.image.registry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
          command: ["/bin/sh", "-c"]
          args: ["bin/dashboardhub eval \"Dashboardhub.Release.migrate()\" && bin/dashboardhub start"]
          ports:
            - name: grpc-port
              containerPort: 50051
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          env:
            - name: LOG_LEVEL
              value: "info"
{{- if .Values.global.statsd.enabled }}
            - name: METRICS_NAMESPACE
              value: {{ .Values.global.statsd.metricsNamespace }}
{{- end }}
            - name: POSTGRES_DB_SSL
              value: {{ .Values.global.database.ssl | quote }}
            - name: POSTGRES_DB_NAME
              value: {{ .Values.db.name | quote }}
            - name: POSTGRES_DB_POOL_SIZE
              value: {{ .Values.db.poolSize | quote }}
            - name: DB_POOL_SIZE
              value: {{ .Values.db.poolSize | quote }}
            {{- include "env.db.elixir" . | indent 12 }}
            - name: GRPC_API
              value: "true"
            - name: RABBIT_CONSUMER
              value: "false"
            - name: AMQP_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.rabbitmq.secretName }}
                  key: amqp-url

{{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}

          readinessProbe:
            grpc:
              port: 50051
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            grpc:
              port: 50051
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            grpc:
              port: 50051
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
{{- if .Values.global.statsd.enabled }}
        - name: {{ .Chart.Name }}-statsd
          image: "{{ .Values.global.image.registry }}/{{ .Values.global.statsd.image }}:{{ .Values.global.statsd.imageTag }}"
          env:
            - name: FLUSH_INTERVAL
              value: "60000"
            - name: GRAPHITE_HOST
              value: {{ .Values.global.statsd.graphiteHost }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
{{- if .Values.statsd.resources }}
          resources:
{{ toYaml .Values.statsd.resources | indent 13 }}
{{- end }}
{{- end }}