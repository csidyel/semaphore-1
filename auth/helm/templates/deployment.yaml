apiVersion: apps/v1
kind: Deployment
metadata:
  name: "auth"
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: "auth"
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      name: "auth"
      labels:
        app: "auth"
        product: semaphoreci
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      automountServiceAccountToken: false
      volumes:
        - name: features-volume
          configMap:
            defaultMode: 0644
            name: features
            items:
            - key: features.yml
              path: features.yml
      containers:
        - name: "auth"
          image: "{{ .Values.global.image.registry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
          volumeMounts:
            - name: features-volume
              mountPath: "/app/features.yml"
              readOnly: true
              subPath: features.yml
          ports:
            - name: http-port
              containerPort: 4000
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          envFrom:
            - configMapRef:
                name: {{ .Values.global.internalApi.configMapName }}
          env:
            - name: FEATURE_YAML_PATH
              value: "/app/features.yml"
            - name: FORCE_IP_CHECK
              value: {{ .Values.forceIpCheck | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.logging | quote }}
            - name: COOKIE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.authentication.configMapName }}
                  key: SESSION_COOKIE_NAME
            - name: BASE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.domain.configMapName }}
                  key: BASE_DOMAIN
            - name: LOAD_BALANCER_IP
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.domain.configMapName }}
                  key: INGRESS_IP
            - name: ON_PREM
              value: "true"

{{- if .Values.global.statsd.enabled }}
            - name: METRICS_NAMESPACE
              value: {{ .Values.global.statsd.metricsNamespace }}
{{- end }}

          livenessProbe:
            httpGet:
              path: /is_alive
              port: http-port
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /is_alive
              port: http-port
            periodSeconds: 10

{{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 13 }}
{{- end }}

{{- if .Values.global.statsd.enabled }}
        - name: {{ .Chart.Name }}-statsd
          image: "{{ .Values.global.image.registry }}/{{ .Values.global.statsd.image }}:{{ .Values.global.statsd.imageTag }}"
          env:
            - name: FLUSH_INTERVAL
              value: "60000"
            - name: GRAPHITE_HOST
              value: {{ .Values.global.statsd.graphiteHost }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
{{- if .Values.statsd.resources }}
          resources:
{{ toYaml .Values.statsd.resources | indent 13 }}
{{- end }}
{{- end }}
